// plugin does this automatically
scala.scalaVersion = scalaVersion

import org.podval.tools.scalaplugin.BackendExtension
final BackendExtension backend = scalaBackend

dependencies {
  testImplementation "org.scala-js:scalajs-junit-test-runtime_${backend.scala2BinaryVersion}:${backend.backendVersion}"

  // dependencies plugin adds automatically
  implementation  "org.scala-js:scalajs-library_${backend.scala2BinaryVersion}:1.19.0" // sets backend.backendVersion
  implementation  "org.scala-js:scalajs-dom_sjs1_${backend.scalaBinaryVersion}:2.8.0"
  if (backend.scala3) {
    implementation "org.scala-lang:scala3-library_sjs1_${backend.scalaBinaryVersion}:${backend.scalaVersion}"
  }
  scalajs         "org.scala-js:scalajs-linker_${backend.scala2BinaryVersion}:${backend.backendVersion}"
  scalajs         "org.scala-js:scalajs-sbt-test-adapter_${backend.scala2BinaryVersion}:${backend.backendVersion}"
  scalajs         "org.scala-js:scalajs-env-jsdom-nodejs_${backend.scala2BinaryVersion}:1.1.0"
  if (!backend.scala3) {
    scalaCompilerPlugins "org.scala-js:scalajs-compiler_${backend.scalaVersion}:${backend.backendVersion}"
  }
  if (!backend.scala3 && backend.nonJvmJUnit4present) {
    testScalaCompilerPlugins "org.scala-js:scalajs-junit-test-plugin_${backend.scalaVersion}:${backend.backendVersion}"
  }
  testRuntimeOnly "org.scala-js:scalajs-test-bridge_${backend.scala2BinaryVersion}:${backend.backendVersion}"
}

link {
  moduleInitializers {
    main {
      className = 'example.Main'
      mainMethodHasArgs = true
    }
  }
}
