// plugin does this automatically
scala.scalaVersion = scalaVersion

import org.podval.tools.test.framework.*

dependencies {
  testImplementation scalaBackend.testFramework(JUnit4ScalaJS, scalaBackend.backendVersion)
  testImplementation scalaBackend.testFramework(MUnit     )
  testImplementation scalaBackend.testFramework(ScalaCheck)
  testImplementation scalaBackend.testFramework(ScalaTest )
  testImplementation scalaBackend.testFramework(Specs2    )
  testImplementation scalaBackend.testFramework(UTest     )
  testImplementation scalaBackend.testFramework(ZioTest   )

  // dependencies plugin adds automatically
  implementation             scalaBackend.scala2JvmDependency   ('org.scala-js'  , 'scalajs-library'          , '1.19.0') // sets scalaBackend.backendVersion
  implementation             scalaBackend.scalaDependency       ('org.scala-js'  , 'scalajs-dom'              , '2.8.1')
  if (scalaBackend.scala3) {
    implementation           scalaBackend.scala3Dependency      ('org.scala-lang', 'scala3-library'           , scalaBackend.scalaVersion.toString())
  }
  scalajs                    scalaBackend.pluginScala2Dependency('org.scala-js'  , 'scalajs-linker'           , scalaBackend.backendVersion)
  scalajs                    scalaBackend.pluginScala2Dependency('org.scala-js'  , 'scalajs-sbt-test-adapter' , scalaBackend.backendVersion)
  scalajs                    scalaBackend.pluginScala2Dependency('org.scala-js'  , 'scalajs-env-jsdom-nodejs' , '1.1.0')
  if (!scalaBackend.scala3) {
    scalaCompilerPlugins     scalaBackend.scala2CompilerPlugin  ('org.scala-js'  , 'scalajs-compiler'         , scalaBackend.backendVersion)
  }
  if (!scalaBackend.scala3 && scalaBackend.nonJvmJUnit4present) {
    testScalaCompilerPlugins scalaBackend.scala2CompilerPlugin  ('org.scala-js'  , 'scalajs-junit-test-plugin', scalaBackend.backendVersion)
  }
  testRuntimeOnly            scalaBackend.scala2JvmDependency   ('org.scala-js'  , 'scalajs-test-bridge'      , scalaBackend.backendVersion)
}

link {
  experimentalUseWebAssembly = true
  moduleKind = 'ESModule'
  esVersion = '2018'
  moduleInitializers {
    main {
      className = 'example.Main'
      mainMethodHasArgs = true
    }
  }
}
